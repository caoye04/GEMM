import matplotlib.pyplot as plt
import numpy as np

# 数据准备
matrix_sizes = [31, 32, 33, 63, 64, 65, 95, 96, 97, 127, 128, 129, 159, 160, 161, 
                191, 192, 193, 223, 224, 225, 255, 256, 257, 287, 288, 289, 319, 
                320, 321, 384, 392, 452, 472, 496, 511, 512, 513, 528, 575, 576, 
                577, 640, 641, 767, 768, 769, 895, 896, 897, 1023, 1024, 1025]

ijk = [3.96, 6.88, 6.73, 5.08, 5.03, 4.97, 5.18, 5.16, 5.16, 5.24, 5.18, 5.18, 5.55, 5.52, 5.49, 
       5.15, 5.15, 5.12, 5.35, 5.35, 5.33, 5.30, 5.23, 5.29, 5.39, 5.34, 5.34, 5.49, 5.50, 
       5.48, 5.32, 5.31, 5.35, 5.34, 5.34, 5.27, 4.00, 5.26, 5.41, 5.33, 5.34, 5.32, 5.31, 
       5.31, 5.27, 5.19, 5.26, 5.39, 5.39, 5.39, 4.89, 2.74, 4.88]

ikj = [2.96, 2.97, 2.95, 2.95, 2.95, 2.96, 2.93, 2.95, 2.96, 2.94, 2.87, 2.93, 3.04, 3.03, 3.04, 
       3.02, 3.02, 3.02, 3.01, 3.01, 3.01, 2.99, 2.21, 3.00, 3.04, 3.01, 3.00, 3.03, 3.03, 
       3.02, 2.93, 3.02, 3.01, 3.01, 3.00, 2.78, 0.76, 2.78, 3.03, 3.01, 3.00, 3.00, 2.93, 
       3.02, 3.02, 2.22, 3.02, 3.02, 2.95, 3.02, 0.94, 0.58, 0.95]

jik = [3.90, 6.72, 6.54, 5.03, 4.94, 4.94, 5.17, 5.13, 5.17, 5.17, 5.01, 5.10, 5.48, 5.43, 5.44, 
       5.15, 5.06, 5.12, 5.37, 5.30, 5.32, 5.30, 5.15, 5.30, 5.38, 5.29, 5.33, 5.50, 5.42, 
       5.48, 5.23, 5.32, 5.34, 5.33, 5.31, 5.23, 4.22, 5.21, 5.39, 5.34, 5.27, 5.33, 5.20, 
       5.31, 5.29, 5.14, 5.29, 5.41, 5.29, 5.39, 4.89, 2.99, 4.87]

jki = [8.66, 14.20, 8.86, 8.64, 8.41, 11.80, 8.69, 8.91, 8.90, 9.80, 9.97, 9.54, 10.70, 11.10, 10.90, 
       10.40, 10.50, 10.40, 10.10, 10.30, 10.20, 9.85, 9.44, 9.92, 11.00, 10.70, 10.60, 11.40, 10.80, 
       10.80, 10.20, 10.50, 10.70, 10.60, 10.60, 10.30, 9.78, 10.40, 11.00, 10.80, 10.80, 10.80, 10.70, 
       10.80, 10.80, 10.60, 10.90, 10.90, 10.90, 11.00, 10.60, 9.15, 10.70]

kij = [2.95, 2.97, 2.95, 2.92, 2.94, 2.97, 2.91, 2.93, 2.94, 2.92, 2.85, 2.93, 3.04, 3.03, 3.03, 
       3.02, 3.01, 3.02, 2.99, 3.00, 3.00, 2.98, 2.12, 2.98, 3.04, 3.00, 3.00, 3.03, 3.03, 
       3.02, 2.92, 3.01, 3.00, 3.01, 2.99, 2.72, 0.74, 2.73, 3.02, 3.01, 3.00, 3.00, 2.94, 
       3.01, 3.00, 2.12, 3.01, 2.97, 2.83, 2.97, 0.88, 0.60, 0.94]

kji = [7.98, 13.90, 7.88, 13.30, 13.90, 13.80, 13.70, 13.80, 14.10, 12.70, 12.00, 12.40, 15.00, 15.10, 15.20, 
       14.90, 14.60, 14.80, 14.60, 14.70, 14.70, 14.10, 12.80, 14.30, 15.10, 14.50, 14.10, 14.70, 14.80, 
       14.70, 14.40, 14.90, 14.60, 14.80, 14.20, 12.50, 9.85, 12.40, 14.90, 14.70, 14.50, 14.50, 14.50, 
       14.90, 14.80, 13.70, 14.80, 14.90, 14.60, 15.00, 10.60, 7.60, 10.50]

# 使用柔和的颜色
colors = {
    'ijk': '#4472C4',  # 蓝色
    'ikj': '#70AD47',  # 绿色
    'jik': '#FFC000',  # 金色
    'jki': '#ED7D31',  # 橙色
    'kij': '#5B9BD5',  # 淡蓝色
    'kji': '#A5A5A5'   # 灰色
}

# 设置图表
plt.figure(figsize=(14, 8))
plt.plot(matrix_sizes, ijk, 'o-', label='ijk', color=colors['ijk'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, ikj, 'o-', label='ikj', color=colors['ikj'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, jik, 'o-', label='jik', color=colors['jik'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, jki, 'o-', label='jki', color=colors['jki'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, kij, 'o-', label='kij', color=colors['kij'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, kji, 'o-', label='kji', color=colors['kji'], markersize=3, alpha=0.8)

# 添加标题和标签
plt.title('Performance Comparison of Different Loop Orders in Matrix Multiplication\nStep1:Loop refactorization', fontsize=16)
plt.xlabel('Matrix Size', fontsize=14)
plt.ylabel('Performance (Gflops)', fontsize=14)
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend(fontsize=12)

# 调整x轴刻度
key_sizes = [32, 64, 128, 256, 512, 768, 1024]
plt.xticks(key_sizes, [str(size) for size in key_sizes])

# 设置y轴范围，确保数据点清晰可见并留出空白
y_min = 0  # 从0开始更直观
y_max = max(max(ijk), max(ikj), max(jik), max(jki), max(kij), max(kji)) + 1
plt.ylim(y_min, y_max)

# 显示图表
plt.tight_layout()
plt.savefig('step2.png', dpi=300)
plt.show()