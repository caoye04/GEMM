import matplotlib.pyplot as plt
import numpy as np

# Data preparation
matrix_sizes = [31, 32, 33, 63, 64, 65, 95, 96, 97, 127, 128, 129, 159, 160, 161,
                191, 192, 193, 223, 224, 225, 255, 256, 257, 287, 288, 289, 319,
                320, 321, 384, 392, 452, 472, 496, 511, 512, 513, 528, 575, 576,
                577, 640, 641, 767, 768, 769, 895, 896, 897, 1023, 1024, 1025]

v1 = [8.63, 77.00, 18.70, 10.50, 80.20, 30.70, 14.20, 75.30, 38.30, 17.40, 70.30, 43.10, 20.30, 75.50, 48.00,
      23.00, 73.70, 50.70, 25.30, 75.00, 53.50, 26.80, 60.50, 51.30, 29.60, 74.70, 57.10, 31.30, 72.70, 57.80,
      68.00, 46.10, 52.40, 48.90, 73.30, 35.50, 54.00, 51.30, 73.00, 41.10, 69.90, 62.50, 66.20, 61.80, 43.20,
      57.50, 58.40, 47.40, 64.20, 63.10, 37.40, 42.60, 43.60]

v2 = [8.64, 77.70, 8.87, 16.60, 78.90, 16.80, 22.90, 74.00, 22.10, 19.10, 66.60, 40.40, 18.20, 74.30, 43.70,
      20.40, 68.00, 49.30, 22.40, 71.60, 51.00, 24.30, 63.20, 51.60, 26.00, 68.50, 53.40, 27.60, 67.10, 54.40,
      64.20, 42.50, 47.60, 44.90, 66.10, 32.60, 54.40, 50.40, 65.20, 36.30, 63.40, 57.00, 62.40, 58.10, 40.20,
      59.00, 57.00, 42.60, 61.40, 59.20, 36.20, 41.90, 43.60]

v3 = [8.03, 66.60, 17.60, 10.40, 68.20, 27.70, 14.00, 66.40, 34.50, 17.00, 61.90, 38.30, 19.80, 65.80, 42.60,
      22.40, 65.30, 45.10, 24.80, 66.10, 47.50, 26.40, 57.60, 46.40, 28.50, 66.00, 50.70, 30.00, 65.10, 51.60,
      61.20, 46.10, 48.20, 48.20, 65.00, 34.60, 48.30, 48.70, 64.80, 38.90, 64.00, 56.00, 60.40, 55.40, 42.10,
      56.30, 54.60, 45.30, 60.10, 57.50, 36.60, 40.00, 41.60]

v4 = [8.65, 67.10, 8.89, 16.70, 68.40, 16.90, 23.10, 67.10, 22.30, 19.20, 62.80, 40.20, 19.90, 67.30, 44.20,
      22.20, 65.00, 46.80, 23.80, 66.00, 48.60, 25.30, 59.80, 47.40, 27.40, 64.30, 50.90, 29.00, 64.00, 51.80,
      61.10, 45.10, 47.60, 46.50, 62.20, 33.60, 48.90, 48.40, 61.60, 37.40, 61.30, 54.80, 59.70, 54.90, 40.40,
      57.00, 54.00, 43.20, 59.70, 56.80, 36.10, 38.50, 41.80]

v5 = [8.65, 71.50, 17.90, 10.40, 72.70, 28.60, 14.10, 69.80, 35.50, 17.10, 66.30, 39.70, 20.00, 69.10, 44.00,
      22.60, 68.40, 46.40, 25.50, 69.00, 49.10, 26.50, 60.40, 48.00, 28.80, 68.80, 52.60, 30.50, 68.30, 53.70,
      65.10, 47.70, 50.00, 49.70, 68.70, 35.60, 50.30, 50.60, 68.30, 39.80, 67.20, 58.40, 64.60, 58.20, 42.80,
      59.40, 57.10, 46.40, 64.50, 60.70, 36.20, 38.70, 40.30]

v6 = [8.65, 71.80, 8.89, 16.70, 72.20, 16.80, 23.00, 70.40, 22.00, 19.10, 67.40, 41.70, 20.60, 70.90, 46.20,
      23.30, 70.00, 49.10, 25.50, 70.40, 51.20, 27.10, 63.40, 50.00, 29.50, 68.80, 53.50, 31.10, 68.80, 55.00,
      66.10, 47.50, 50.20, 49.50, 68.20, 36.40, 51.50, 51.90, 67.50, 40.60, 67.40, 59.30, 65.40, 59.30, 43.50,
      61.40, 57.60, 46.70, 65.10, 61.00, 36.60, 37.60, 40.70]

# Use soft colors
colors = {
    'v1': '#4472C4',  # Blue
    'v2': '#70AD47',  # Green
    'v3': '#FFC000',  # Gold
    'v4': '#ED7D31',  # Orange
    'v5': '#5B9BD5',  # Light blue
    'v6': '#A5A5A5'   # Gray
}

# Set up chart
plt.figure(figsize=(14, 8))
plt.plot(matrix_sizes, v1, 'o-', label='64/16 No Unroll', color=colors['v1'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, v2, 'o-', label='256/16 No Unroll', color=colors['v2'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, v3, 'o-', label='64/16 C-Reg Unroll', color=colors['v3'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, v4, 'o-', label='256/16 C-Reg Unroll', color=colors['v4'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, v5, 'o-', label='64/16 Full Unroll', color=colors['v5'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, v6, 'o-', label='256/16 Full Unroll', color=colors['v6'], markersize=3, alpha=0.8)

# Add title and labels
plt.title('Performance Comparison of Vectorization and Loop Unrolling', fontsize=16)
plt.xlabel('Matrix Size', fontsize=14)
plt.ylabel('Performance (Gflops)', fontsize=14)
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend(fontsize=12)

# Adjust x-axis ticks
key_sizes = [32, 64, 128, 256, 512, 768, 1024]
plt.xticks(key_sizes, [str(size) for size in key_sizes])

# Set y-axis range
y_min = 0
y_max = max(max(v1), max(v2), max(v3), max(v4), max(v5), max(v6)) + 5
plt.ylim(y_min, y_max)

# Display chart
plt.tight_layout()
plt.savefig('step5.png', dpi=300)
plt.show()