import matplotlib.pyplot as plt
import numpy as np

# 数据准备
matrix_sizes = [31, 32, 33, 63, 64, 65, 95, 96, 97, 127, 128, 129, 159, 160, 161, 
                191, 192, 193, 223, 224, 225, 255, 256, 257, 287, 288, 289, 319, 
                320, 321, 384, 392, 452, 472, 496, 511, 512, 513, 528, 575, 576, 
                577, 640, 641, 767, 768, 769, 895, 896, 897, 1023, 1024, 1025]

config_64_16 = [8.65, 13.8, 8.89, 16.7, 18.3, 13.7, 13.4, 16.6, 13.6, 17.5, 18.1, 15.7, 15.0, 17.2, 15.2, 
               17.8, 18.3, 15.7, 15.9, 17.6, 16.0, 16.3, 14.0, 15.3, 16.4, 17.7, 16.5, 18.0, 18.2, 
               17.3, 18.1, 17.5, 17.2, 17.9, 17.6, 15.4, 13.4, 14.7, 17.7, 18.2, 18.2, 17.7, 18.0, 
               17.9, 16.6, 14.0, 16.1, 18.3, 18.0, 18.0, 15.0, 12.5, 14.7]

config_266_16 = [8.66, 12.4, 8.89, 16.7, 17.0, 16.7, 20.5, 19.6, 19.9, 19.1, 18.4, 18.8, 19.8, 18.9, 19.4, 
                20.2, 19.3, 19.9, 20.4, 19.5, 17.6, 17.5, 16.9, 17.6, 15.3, 15.3, 15.5, 16.5, 16.6, 
                16.7, 17.8, 17.6, 17.7, 18.3, 18.6, 17.0, 17.4, 17.1, 18.8, 16.6, 18.1, 16.6, 18.8, 
                17.6, 17.1, 16.1, 17.1, 17.0, 17.4, 17.1, 17.0, 15.7, 17.0]

config_266_64 = [8.66, 12.3, 8.88, 16.7, 17.0, 16.8, 20.6, 19.5, 19.9, 19.2, 18.5, 18.9, 20.0, 19.0, 19.5, 
                20.2, 19.4, 20.0, 20.4, 19.6, 17.6, 17.5, 16.8, 17.6, 15.3, 15.3, 15.5, 16.5, 16.6, 
                16.7, 17.8, 17.6, 17.7, 18.3, 18.5, 17.1, 15.6, 17.1, 18.7, 16.5, 18.0, 17.1, 18.8, 
                17.2, 17.1, 17.6, 17.1, 17.0, 17.6, 17.1, 16.9, 15.6, 17.0]

config_64_32 = [8.61, 13.7, 8.87, 16.7, 18.3, 13.6, 13.4, 16.6, 13.6, 17.4, 18.1, 15.6, 15.1, 17.2, 15.2, 
               17.8, 18.2, 16.6, 15.9, 17.5, 16.0, 16.3, 14.0, 15.4, 16.4, 17.7, 16.5, 18.1, 18.3, 
               17.4, 18.1, 17.5, 17.2, 17.9, 17.6, 15.3, 13.4, 14.7, 17.6, 18.2, 18.2, 17.8, 17.6, 
               17.9, 16.6, 14.0, 16.2, 18.3, 17.7, 18.0, 15.0, 12.5, 14.7]

config_128_32 = [8.65, 14.6, 8.9, 16.4, 18.9, 16.8, 23.0, 21.9, 22.2, 19.0, 18.4, 16.2, 15.6, 18.6, 15.7, 
                18.8, 18.8, 18.8, 18.6, 17.8, 18.0, 18.9, 17.5, 17.3, 16.8, 18.2, 17.0, 18.8, 18.6, 
                18.8, 18.0, 17.5, 18.5, 17.7, 17.7, 18.4, 16.2, 17.5, 17.7, 18.6, 18.2, 18.6, 17.9, 
                17.8, 18.7, 17.4, 18.1, 18.4, 17.9, 18.0, 18.3, 15.5, 17.9]

config_266_128 = [8.65, 12.4, 8.9, 16.7, 16.9, 16.7, 20.6, 19.5, 19.8, 19.2, 18.6, 18.8, 19.9, 19.0, 19.5, 
                 20.2, 19.3, 19.9, 20.4, 19.6, 17.6, 17.5, 16.8, 17.5, 15.3, 15.3, 15.5, 16.5, 16.6, 
                 16.7, 17.7, 17.6, 17.7, 18.3, 18.4, 17.1, 17.3, 17.3, 18.7, 16.6, 18.0, 16.6, 18.8, 
                 17.2, 17.1, 17.6, 17.1, 17.0, 17.6, 17.1, 17.0, 15.6, 17.0]

# 使用柔和的颜色
colors = {
    'config_64_16': '#000000',    # 蓝色
    'config_266_16': '#ED7D31',   # 橙色
    'config_266_64': '#A5A5A5',   # 灰色
    'config_64_32': '#70AD47',    # 绿色
    'config_128_32': '#5B9BD5',   # 淡蓝色
    'config_266_128': '#FFC000'   # 金色
}

# 设置图表
plt.figure(figsize=(14, 8))
plt.plot(matrix_sizes, config_64_16, 'o-', label='64/16', color=colors['config_64_16'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, config_266_16, 'o-', label='266/16', color=colors['config_266_16'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, config_266_64, 'o-', label='266/64', color=colors['config_266_64'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, config_64_32, 'o-', label='64/32', color=colors['config_64_32'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, config_128_32, 'o-', label='128/32', color=colors['config_128_32'], markersize=3, alpha=0.8)
plt.plot(matrix_sizes, config_266_128, 'o-', label='266/128', color=colors['config_266_128'], markersize=3, alpha=0.8)

# 添加标题和标签
plt.title('Performance Comparison of Different Block Sizes in Matrix Multiplication\nStep4: Multi-level Blocking Size Exploration', fontsize=16)
plt.xlabel('Matrix Size', fontsize=14)
plt.ylabel('Performance (Gflops)', fontsize=14)
plt.grid(True, linestyle='--', alpha=0.5)
plt.legend(fontsize=12, title='Block Size (Outer/Inner)')

# 调整x轴刻度
key_sizes = [32, 64, 96, 128, 192, 256, 384, 512, 768, 1024]
plt.xticks(key_sizes, [str(size) for size in key_sizes])

# 设置y轴范围，确保数据点清晰可见并留出空白
y_min = 8  # 从8开始更清晰展示差异
y_max = max(max(config_64_16), max(config_266_16), max(config_266_64), 
            max(config_64_32), max(config_128_32), max(config_266_128)) + 1
plt.ylim(y_min, y_max)

# 显示图表
plt.tight_layout()
plt.savefig('step4.png', dpi=300)
plt.show()